#!/usr/bin/env bash

GREEN='\033[0;32m'
RESET_COLOR='\033[0m'

if [ -n "$1" ]; then cat <<'HELP'; exit; fi
Usage: script/create-db-users
Create the db_text_search database users for all the supported databases.
If the `DB` environment variable is set, do the above only for that database.
HELP

USER='db_text_search'
PASS='db_text_search'

set -e
log() { if [ -t 1 ]; then echo -e >&2 "${GREEN}create-db-users: $@${RESET_COLOR}"; else echo >&2 "$@"; fi }

create_mysql_user() {
  mysql -s -u"$USER" -p"$PASS" -e '' 2>/dev/null || (\
    log "Creating MySQL '$USER' user. MySQL root password required." && mysql --verbose -uroot -p <<SQL)
GRANT ALL PRIVILEGES ON \`db_text_search_gem_dev\`.* TO '$USER'@'localhost' IDENTIFIED BY '$PASS';
GRANT ALL PRIVILEGES ON \`db_text_search_gem_test\`.* TO '$USER'@'localhost';
SQL
}

create_postgresql_user() {
  local cmd
  if [ -n "$PG_DAEMON_USER" ]; then
    log "sudo required:"
    cmd="sudo -u $PG_DAEMON_USER psql postgres"
  else
    cmd='psql postgres'
  fi
  $cmd -tAc "SELECT 1 FROM pg_roles WHERE rolname='$USER'" | grep -q 1 || (\
    log "Creating Postgres '$USER' user." && $cmd --echo-all <<SQL)
CREATE ROLE $USER LOGIN PASSWORD '$PASS';
ALTER USER $USER CREATEDB;
SQL
}

[ -z "$DB" -o "$DB" = 'mysql2' ] && create_mysql_user
[ -z "$DB" -o "$DB" = 'postgresql' ] && create_postgresql_user
